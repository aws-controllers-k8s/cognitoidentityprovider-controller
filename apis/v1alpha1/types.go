// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	"github.com/aws/aws-sdk-go/aws"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
	_ = &aws.JSONValue{}
	_ = ackv1alpha1.AWSAccountID("")
)

// The data type for AccountRecoverySetting.
type AccountRecoverySettingType struct {
	RecoveryMechanisms []*RecoveryOptionType `json:"recoveryMechanisms,omitempty"`
}

// The configuration for creating a new user profile.
type AdminCreateUserConfigType struct {
	AllowAdminCreateUserOnly *bool `json:"allowAdminCreateUserOnly,omitempty"`
	// The message template structure.
	InviteMessageTemplate     *MessageTemplateType `json:"inviteMessageTemplate,omitempty"`
	UnusedAccountValidityDays *int64               `json:"unusedAccountValidityDays,omitempty"`
}

// The Amazon Pinpoint analytics configuration necessary to collect metrics
// for a user pool.
//
// In Regions where Amazon Pinpoint isn't available, user pools only support
// sending events to Amazon Pinpoint projects in us-east-1. In Regions where
// Amazon Pinpoint is available, user pools support sending events to Amazon
// Pinpoint projects within that same Region.
type AnalyticsConfigurationType struct {
	ApplicationARN *string `json:"applicationARN,omitempty"`
	ExternalID     *string `json:"externalID,omitempty"`
	RoleARN        *string `json:"roleARN,omitempty"`
	UserDataShared *bool   `json:"userDataShared,omitempty"`
}

// An Amazon Pinpoint analytics endpoint.
//
// An endpoint uniquely identifies a mobile device, email address, or phone
// number that can receive messages from Amazon Pinpoint analytics. For more
// information about Amazon Web Services Regions that can contain Amazon Pinpoint
// resources for use with Amazon Cognito user pools, see Using Amazon Pinpoint
// analytics with Amazon Cognito user pools (https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-pinpoint-integration.html).
type AnalyticsMetadataType struct {
	AnalyticsEndpointID *string `json:"analyticsEndpointID,omitempty"`
}

// The authentication event type.
type AuthEventType struct {
	CreationDate *metav1.Time `json:"creationDate,omitempty"`
	EventID      *string      `json:"eventID,omitempty"`
}

// The authentication result.
type AuthenticationResultType struct {
	ExpiresIn *int64  `json:"expiresIn,omitempty"`
	TokenType *string `json:"tokenType,omitempty"`
}

// The CloudWatch logging destination of a user pool detailed activity logging
// configuration.
type CloudWatchLogsConfigurationType struct {
	LogGroupARN *string `json:"logGroupARN,omitempty"`
}

// The delivery details for an email or SMS message that Amazon Cognito sent
// for authentication or verification.
type CodeDeliveryDetailsType struct {
	Destination *string `json:"destination,omitempty"`
}

// Contextual user data type used for evaluating the risk of an unexpected event
// by Amazon Cognito advanced security.
type ContextDataType struct {
	EncodedData *string `json:"encodedData,omitempty"`
	IPAddress   *string `json:"ipAddress,omitempty"`
	ServerName  *string `json:"serverName,omitempty"`
	ServerPath  *string `json:"serverPath,omitempty"`
}

// The configuration for a custom domain that hosts the sign-up and sign-in
// webpages for your application.
type CustomDomainConfigType struct {
	CertificateARN *string `json:"certificateARN,omitempty"`
}

// The properties of a custom email sender Lambda trigger.
type CustomEmailLambdaVersionConfigType struct {
	LambdaARN     *string `json:"lambdaARN,omitempty"`
	LambdaVersion *string `json:"lambdaVersion,omitempty"`
}

// The properties of a custom SMS sender Lambda trigger.
type CustomSMSLambdaVersionConfigType struct {
	LambdaARN     *string `json:"lambdaARN,omitempty"`
	LambdaVersion *string `json:"lambdaVersion,omitempty"`
}

// The device-remembering configuration for a user pool. A DescribeUserPool
// (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html)
// request returns a null value for this object when the user pool isn't configured
// to remember devices. When device remembering is active, you can remember
// a user's device with a ConfirmDevice (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html)
// API request. Additionally. when the property DeviceOnlyRememberedOnUserPrompt
// is true, you must follow ConfirmDevice with an UpdateDeviceStatus (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html)
// API request that sets the user's device to remembered or not_remembered.
//
// To sign in with a remembered device, include DEVICE_KEY in the authentication
// parameters in your user's InitiateAuth (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html)
// request. If your app doesn't include a DEVICE_KEY parameter, the response
// (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html#API_InitiateAuth_ResponseSyntax)
// from Amazon Cognito includes newly-generated DEVICE_KEY and DEVICE_GROUP_KEY
// values under NewDeviceMetadata. Store these values to use in future device-authentication
// requests.
//
// When you provide a value for any property of DeviceConfiguration, you activate
// the device remembering for the user pool.
type DeviceConfigurationType struct {
	ChallengeRequiredOnNewDevice     *bool `json:"challengeRequiredOnNewDevice,omitempty"`
	DeviceOnlyRememberedOnUserPrompt *bool `json:"deviceOnlyRememberedOnUserPrompt,omitempty"`
}

// The device verifier against which it is authenticated.
type DeviceSecretVerifierConfigType struct {
	PasswordVerifier *string `json:"passwordVerifier,omitempty"`
	Salt             *string `json:"salt,omitempty"`
}

// The device type.
type DeviceType struct {
	DeviceCreateDate            *metav1.Time `json:"deviceCreateDate,omitempty"`
	DeviceLastAuthenticatedDate *metav1.Time `json:"deviceLastAuthenticatedDate,omitempty"`
	DeviceLastModifiedDate      *metav1.Time `json:"deviceLastModifiedDate,omitempty"`
}

// A container for information about a domain.
type DomainDescriptionType struct {
	CloudFrontDistribution *string `json:"cloudFrontDistribution,omitempty"`
	Domain                 *string `json:"domain,omitempty"`
	UserPoolID             *string `json:"userPoolID,omitempty"`
}

// The email configuration of your user pool. The email configuration type sets
// your preferred sending method, Amazon Web Services Region, and sender for
// messages from your user pool.
//
// Amazon Cognito can send email messages with Amazon Simple Email Service resources
// in the Amazon Web Services Region where you created your user pool, and in
// alternate Regions in some cases. For more information on the supported Regions,
// see Email settings for Amazon Cognito user pools (https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html).
type EmailConfigurationType struct {
	ConfigurationSet    *string `json:"configurationSet,omitempty"`
	EmailSendingAccount *string `json:"emailSendingAccount,omitempty"`
	From                *string `json:"from,omitempty"`
	ReplyToEmailAddress *string `json:"replyToEmailAddress,omitempty"`
	SourceARN           *string `json:"sourceARN,omitempty"`
}

// Specifies the user context data captured at the time of an event request.
type EventContextDataType struct {
	City       *string `json:"city,omitempty"`
	Country    *string `json:"country,omitempty"`
	DeviceName *string `json:"deviceName,omitempty"`
	IPAddress  *string `json:"ipAddress,omitempty"`
	Timezone   *string `json:"timezone,omitempty"`
}

// Specifies the event feedback type.
type EventFeedbackType struct {
	FeedbackDate *metav1.Time `json:"feedbackDate,omitempty"`
	Provider     *string      `json:"provider,omitempty"`
}

// The event risk type.
type EventRiskType struct {
	CompromisedCredentialsDetected *bool `json:"compromisedCredentialsDetected,omitempty"`
}

// The group type.
type GroupType struct {
	CreationDate     *metav1.Time `json:"creationDate,omitempty"`
	LastModifiedDate *metav1.Time `json:"lastModifiedDate,omitempty"`
	RoleARN          *string      `json:"roleARN,omitempty"`
	UserPoolID       *string      `json:"userPoolID,omitempty"`
}

// The HTTP header.
type HTTPHeader struct {
	HeaderName  *string `json:"headerName,omitempty"`
	HeaderValue *string `json:"headerValue,omitempty"`
}

// A container for information about an IdP.
type IdentityProviderType struct {
	CreationDate     *metav1.Time `json:"creationDate,omitempty"`
	LastModifiedDate *metav1.Time `json:"lastModifiedDate,omitempty"`
	UserPoolID       *string      `json:"userPoolID,omitempty"`
}

// Specifies the configuration for Lambda triggers.
type LambdaConfigType struct {
	CreateAuthChallenge *string `json:"createAuthChallenge,omitempty"`
	// The properties of a custom email sender Lambda trigger.
	CustomEmailSender *CustomEmailLambdaVersionConfigType `json:"customEmailSender,omitempty"`
	CustomMessage     *string                             `json:"customMessage,omitempty"`
	// The properties of a custom SMS sender Lambda trigger.
	CustomSMSSender     *CustomSMSLambdaVersionConfigType `json:"customSMSSender,omitempty"`
	DefineAuthChallenge *string                           `json:"defineAuthChallenge,omitempty"`
	KMSKeyID            *string                           `json:"kmsKeyID,omitempty"`
	PostAuthentication  *string                           `json:"postAuthentication,omitempty"`
	PostConfirmation    *string                           `json:"postConfirmation,omitempty"`
	PreAuthentication   *string                           `json:"preAuthentication,omitempty"`
	PreSignUp           *string                           `json:"preSignUp,omitempty"`
	PreTokenGeneration  *string                           `json:"preTokenGeneration,omitempty"`
	// The properties of a pre token generation Lambda trigger.
	PreTokenGenerationConfig    *PreTokenGenerationVersionConfigType `json:"preTokenGenerationConfig,omitempty"`
	UserMigration               *string                              `json:"userMigration,omitempty"`
	VerifyAuthChallengeResponse *string                              `json:"verifyAuthChallengeResponse,omitempty"`
}

// The logging parameters of a user pool.
type LogDeliveryConfigurationType struct {
	UserPoolID *string `json:"userPoolID,omitempty"`
}

// The message template structure.
type MessageTemplateType struct {
	EmailMessage *string `json:"emailMessage,omitempty"`
	EmailSubject *string `json:"emailSubject,omitempty"`
	SMSMessage   *string `json:"sMSMessage,omitempty"`
}

// The new device metadata type.
type NewDeviceMetadataType struct {
	DeviceGroupKey *string `json:"deviceGroupKey,omitempty"`
}

// The notify configuration type.
type NotifyConfigurationType struct {
	From      *string `json:"from,omitempty"`
	ReplyTo   *string `json:"replyTo,omitempty"`
	SourceARN *string `json:"sourceARN,omitempty"`
}

// The minimum and maximum values of an attribute that is of the number data
// type.
type NumberAttributeConstraintsType struct {
	MaxValue *string `json:"maxValue,omitempty"`
	MinValue *string `json:"minValue,omitempty"`
}

// The password policy type.
type PasswordPolicyType struct {
	MinimumLength                 *int64 `json:"minimumLength,omitempty"`
	RequireLowercase              *bool  `json:"requireLowercase,omitempty"`
	RequireNumbers                *bool  `json:"requireNumbers,omitempty"`
	RequireSymbols                *bool  `json:"requireSymbols,omitempty"`
	RequireUppercase              *bool  `json:"requireUppercase,omitempty"`
	TemporaryPasswordValidityDays *int64 `json:"temporaryPasswordValidityDays,omitempty"`
}

// The properties of a pre token generation Lambda trigger.
type PreTokenGenerationVersionConfigType struct {
	LambdaARN     *string `json:"lambdaARN,omitempty"`
	LambdaVersion *string `json:"lambdaVersion,omitempty"`
}

// A container for IdP details.
type ProviderDescription struct {
	CreationDate     *metav1.Time `json:"creationDate,omitempty"`
	LastModifiedDate *metav1.Time `json:"lastModifiedDate,omitempty"`
}

// A container for information about an IdP for a user pool.
type ProviderUserIdentifierType struct {
	ProviderAttributeName  *string `json:"providerAttributeName,omitempty"`
	ProviderAttributeValue *string `json:"providerAttributeValue,omitempty"`
}

// A map containing a priority as a key, and recovery method name as a value.
type RecoveryOptionType struct {
	Name     *string `json:"name,omitempty"`
	Priority *int64  `json:"priority,omitempty"`
}

// A container for information about a resource server for a user pool.
type ResourceServerType struct {
	UserPoolID *string `json:"userPoolID,omitempty"`
}

// The risk configuration type.
type RiskConfigurationType struct {
	LastModifiedDate *metav1.Time `json:"lastModifiedDate,omitempty"`
	UserPoolID       *string      `json:"userPoolID,omitempty"`
}

// The type used for enabling SMS multi-factor authentication (MFA) at the user
// level. Phone numbers don't need to be verified to be used for SMS MFA. If
// an MFA type is activated for a user, the user will be prompted for MFA during
// all sign-in attempts, unless device tracking is turned on and the device
// has been trusted. If you would like MFA to be applied selectively based on
// the assessed risk level of sign-in attempts, deactivate MFA for users and
// turn on Adaptive Authentication for the user pool.
type SMSMFASettingsType struct {
	Enabled      *bool `json:"enabled,omitempty"`
	PreferredMFA *bool `json:"preferredMFA,omitempty"`
}

// A list of the user attributes and their properties in your user pool. The
// attribute schema contains standard attributes, custom attributes with a custom:
// prefix, and developer attributes with a dev: prefix. For more information,
// see User pool attributes (https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html).
//
// Developer-only attributes are a legacy feature of user pools, are read-only
// to all app clients. You can create and update developer-only attributes only
// with IAM-authenticated API operations. Use app client read/write permissions
// instead.
type SchemaAttributeType struct {
	AttributeDataType      *string `json:"attributeDataType,omitempty"`
	DeveloperOnlyAttribute *bool   `json:"developerOnlyAttribute,omitempty"`
	Mutable                *bool   `json:"mutable,omitempty"`
	Name                   *string `json:"name,omitempty"`
	// The minimum and maximum values of an attribute that is of the number data
	// type.
	NumberAttributeConstraints *NumberAttributeConstraintsType `json:"numberAttributeConstraints,omitempty"`
	Required                   *bool                           `json:"required,omitempty"`
	// The constraints associated with a string attribute.
	StringAttributeConstraints *StringAttributeConstraintsType `json:"stringAttributeConstraints,omitempty"`
}

// The SMS configuration type is the settings that your Amazon Cognito user
// pool must use to send an SMS message from your Amazon Web Services account
// through Amazon Simple Notification Service. To send SMS messages with Amazon
// SNS in the Amazon Web Services Region that you want, the Amazon Cognito user
// pool uses an Identity and Access Management (IAM) role in your Amazon Web
// Services account.
type SmsConfigurationType struct {
	ExternalID   *string `json:"externalID,omitempty"`
	SNSCallerARN *string `json:"snsCallerARN,omitempty"`
	SNSRegion    *string `json:"snsRegion,omitempty"`
}

// The SMS text message multi-factor authentication (MFA) configuration type.
type SmsMFAConfigType struct {
	SmsAuthenticationMessage *string `json:"smsAuthenticationMessage,omitempty"`
	// The SMS configuration type is the settings that your Amazon Cognito user
	// pool must use to send an SMS message from your Amazon Web Services account
	// through Amazon Simple Notification Service. To send SMS messages with Amazon
	// SNS in the Amazon Web Services Region that you want, the Amazon Cognito user
	// pool uses an Identity and Access Management (IAM) role in your Amazon Web
	// Services account.
	SmsConfiguration *SmsConfigurationType `json:"smsConfiguration,omitempty"`
}

// The type used for enabling software token MFA at the user pool level.
type SoftwareTokenMFAConfigType struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// The type used for enabling software token MFA at the user level. If an MFA
// type is activated for a user, the user will be prompted for MFA during all
// sign-in attempts, unless device tracking is turned on and the device has
// been trusted. If you want MFA to be applied selectively based on the assessed
// risk level of sign-in attempts, deactivate MFA for users and turn on Adaptive
// Authentication for the user pool.
type SoftwareTokenMFASettingsType struct {
	Enabled      *bool `json:"enabled,omitempty"`
	PreferredMFA *bool `json:"preferredMFA,omitempty"`
}

// The constraints associated with a string attribute.
type StringAttributeConstraintsType struct {
	MaxLength *string `json:"maxLength,omitempty"`
	MinLength *string `json:"minLength,omitempty"`
}

// A container for the UI customization information for a user pool's built-in
// app UI.
type UICustomizationType struct {
	CreationDate     *metav1.Time `json:"creationDate,omitempty"`
	LastModifiedDate *metav1.Time `json:"lastModifiedDate,omitempty"`
	UserPoolID       *string      `json:"userPoolID,omitempty"`
}

// The settings for updates to user attributes. These settings include the property
// AttributesRequireVerificationBeforeUpdate, a user-pool setting that tells
// Amazon Cognito how to handle changes to the value of your users' email address
// and phone number attributes. For more information, see Verifying updates
// to email addresses and phone numbers (https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates).
type UserAttributeUpdateSettingsType struct {
	AttributesRequireVerificationBeforeUpdate []*string `json:"attributesRequireVerificationBeforeUpdate,omitempty"`
}

// Contextual data, such as the user's device fingerprint, IP address, or location,
// used for evaluating the risk of an unexpected event by Amazon Cognito advanced
// security.
type UserContextDataType struct {
	EncodedData *string `json:"encodedData,omitempty"`
	IPAddress   *string `json:"ipAddress,omitempty"`
}

// The user import job type.
type UserImportJobType struct {
	CloudWatchLogsRoleARN *string      `json:"cloudWatchLogsRoleARN,omitempty"`
	CompletionDate        *metav1.Time `json:"completionDate,omitempty"`
	CreationDate          *metav1.Time `json:"creationDate,omitempty"`
	StartDate             *metav1.Time `json:"startDate,omitempty"`
	UserPoolID            *string      `json:"userPoolID,omitempty"`
}

// User pool add-ons. Contains settings for activation of advanced security
// features. To log user security information but take no action, set to AUDIT.
// To configure automatic security responses to risky traffic to your user pool,
// set to ENFORCED.
//
// For more information, see Adding advanced security to a user pool (https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html).
type UserPoolAddOnsType struct {
	AdvancedSecurityMode *string `json:"advancedSecurityMode,omitempty"`
}

// The description of the user pool client.
type UserPoolClientDescription struct {
	UserPoolID *string `json:"userPoolID,omitempty"`
}

// Contains information about a user pool client.
type UserPoolClientType struct {
	AllowedOAuthFlowsUserPoolClient          *bool        `json:"allowedOAuthFlowsUserPoolClient,omitempty"`
	CreationDate                             *metav1.Time `json:"creationDate,omitempty"`
	EnablePropagateAdditionalUserContextData *bool        `json:"enablePropagateAdditionalUserContextData,omitempty"`
	EnableTokenRevocation                    *bool        `json:"enableTokenRevocation,omitempty"`
	LastModifiedDate                         *metav1.Time `json:"lastModifiedDate,omitempty"`
	UserPoolID                               *string      `json:"userPoolID,omitempty"`
}

// A user pool description.
type UserPoolDescriptionType struct {
	CreationDate *metav1.Time `json:"creationDate,omitempty"`
	ID           *string      `json:"id,omitempty"`
	// Specifies the configuration for Lambda triggers.
	LambdaConfig     *LambdaConfigType `json:"lambdaConfig,omitempty"`
	LastModifiedDate *metav1.Time      `json:"lastModifiedDate,omitempty"`
	Name             *string           `json:"name,omitempty"`
	Status           *string           `json:"status,omitempty"`
}

// The policy associated with a user pool.
type UserPoolPolicyType struct {
	// The password policy type.
	PasswordPolicy *PasswordPolicyType `json:"passwordPolicy,omitempty"`
}

// A container for information about the user pool.
type UserPoolType struct {
	// The data type for AccountRecoverySetting.
	AccountRecoverySetting *AccountRecoverySettingType `json:"accountRecoverySetting,omitempty"`
	// The configuration for creating a new user profile.
	AdminCreateUserConfig  *AdminCreateUserConfigType `json:"adminCreateUserConfig,omitempty"`
	AliasAttributes        []*string                  `json:"aliasAttributes,omitempty"`
	ARN                    *string                    `json:"arn,omitempty"`
	AutoVerifiedAttributes []*string                  `json:"autoVerifiedAttributes,omitempty"`
	CreationDate           *metav1.Time               `json:"creationDate,omitempty"`
	CustomDomain           *string                    `json:"customDomain,omitempty"`
	DeletionProtection     *string                    `json:"deletionProtection,omitempty"`
	// The device-remembering configuration for a user pool. A DescribeUserPool
	// (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html)
	// request returns a null value for this object when the user pool isn't configured
	// to remember devices. When device remembering is active, you can remember
	// a user's device with a ConfirmDevice (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html)
	// API request. Additionally. when the property DeviceOnlyRememberedOnUserPrompt
	// is true, you must follow ConfirmDevice with an UpdateDeviceStatus (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html)
	// API request that sets the user's device to remembered or not_remembered.
	//
	// To sign in with a remembered device, include DEVICE_KEY in the authentication
	// parameters in your user's InitiateAuth (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html)
	// request. If your app doesn't include a DEVICE_KEY parameter, the response
	// (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html#API_InitiateAuth_ResponseSyntax)
	// from Amazon Cognito includes newly-generated DEVICE_KEY and DEVICE_GROUP_KEY
	// values under NewDeviceMetadata. Store these values to use in future device-authentication
	// requests.
	//
	// When you provide a value for any property of DeviceConfiguration, you activate
	// the device remembering for the user pool.
	DeviceConfiguration *DeviceConfigurationType `json:"deviceConfiguration,omitempty"`
	Domain              *string                  `json:"domain,omitempty"`
	// The email configuration of your user pool. The email configuration type sets
	// your preferred sending method, Amazon Web Services Region, and sender for
	// messages from your user pool.
	//
	// Amazon Cognito can send email messages with Amazon Simple Email Service resources
	// in the Amazon Web Services Region where you created your user pool, and in
	// alternate Regions in some cases. For more information on the supported Regions,
	// see Email settings for Amazon Cognito user pools (https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html).
	EmailConfiguration        *EmailConfigurationType `json:"emailConfiguration,omitempty"`
	EmailConfigurationFailure *string                 `json:"emailConfigurationFailure,omitempty"`
	EmailVerificationMessage  *string                 `json:"emailVerificationMessage,omitempty"`
	EmailVerificationSubject  *string                 `json:"emailVerificationSubject,omitempty"`
	EstimatedNumberOfUsers    *int64                  `json:"estimatedNumberOfUsers,omitempty"`
	ID                        *string                 `json:"id,omitempty"`
	// Specifies the configuration for Lambda triggers.
	LambdaConfig     *LambdaConfigType `json:"lambdaConfig,omitempty"`
	LastModifiedDate *metav1.Time      `json:"lastModifiedDate,omitempty"`
	MFAConfiguration *string           `json:"mfaConfiguration,omitempty"`
	Name             *string           `json:"name,omitempty"`
	// The policy associated with a user pool.
	Policies                 *UserPoolPolicyType    `json:"policies,omitempty"`
	SchemaAttributes         []*SchemaAttributeType `json:"schemaAttributes,omitempty"`
	SmsAuthenticationMessage *string                `json:"smsAuthenticationMessage,omitempty"`
	// The SMS configuration type is the settings that your Amazon Cognito user
	// pool must use to send an SMS message from your Amazon Web Services account
	// through Amazon Simple Notification Service. To send SMS messages with Amazon
	// SNS in the Amazon Web Services Region that you want, the Amazon Cognito user
	// pool uses an Identity and Access Management (IAM) role in your Amazon Web
	// Services account.
	SmsConfiguration        *SmsConfigurationType `json:"smsConfiguration,omitempty"`
	SmsConfigurationFailure *string               `json:"smsConfigurationFailure,omitempty"`
	SmsVerificationMessage  *string               `json:"smsVerificationMessage,omitempty"`
	Status                  *string               `json:"status,omitempty"`
	// The settings for updates to user attributes. These settings include the property
	// AttributesRequireVerificationBeforeUpdate, a user-pool setting that tells
	// Amazon Cognito how to handle changes to the value of your users' email address
	// and phone number attributes. For more information, see Verifying updates
	// to email addresses and phone numbers (https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates).
	UserAttributeUpdateSettings *UserAttributeUpdateSettingsType `json:"userAttributeUpdateSettings,omitempty"`
	// User pool add-ons. Contains settings for activation of advanced security
	// features. To log user security information but take no action, set to AUDIT.
	// To configure automatic security responses to risky traffic to your user pool,
	// set to ENFORCED.
	//
	// For more information, see Adding advanced security to a user pool (https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html).
	UserPoolAddOns     *UserPoolAddOnsType `json:"userPoolAddOns,omitempty"`
	UserPoolTags       map[string]*string  `json:"userPoolTags,omitempty"`
	UsernameAttributes []*string           `json:"usernameAttributes,omitempty"`
	// The username configuration type.
	UsernameConfiguration *UsernameConfigurationType `json:"usernameConfiguration,omitempty"`
	// The template for verification messages.
	VerificationMessageTemplate *VerificationMessageTemplateType `json:"verificationMessageTemplate,omitempty"`
}

// A user profile in a Amazon Cognito user pool.
type UserType struct {
	Enabled              *bool        `json:"enabled,omitempty"`
	UserCreateDate       *metav1.Time `json:"userCreateDate,omitempty"`
	UserLastModifiedDate *metav1.Time `json:"userLastModifiedDate,omitempty"`
}

// The username configuration type.
type UsernameConfigurationType struct {
	CaseSensitive *bool `json:"caseSensitive,omitempty"`
}

// The template for verification messages.
type VerificationMessageTemplateType struct {
	DefaultEmailOption *string `json:"defaultEmailOption,omitempty"`
	EmailMessage       *string `json:"emailMessage,omitempty"`
	EmailMessageByLink *string `json:"emailMessageByLink,omitempty"`
	EmailSubject       *string `json:"emailSubject,omitempty"`
	EmailSubjectByLink *string `json:"emailSubjectByLink,omitempty"`
	SmsMessage         *string `json:"smsMessage,omitempty"`
}
